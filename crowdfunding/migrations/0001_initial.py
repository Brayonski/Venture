# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2020-03-10 23:25
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(verbose_name='date created')),
                ('company_name', models.CharField(max_length=255)),
                ('company_email', models.EmailField(max_length=254)),
                ('duration', models.DateField(verbose_name='campaign closing date')),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=19, validators=[django.core.validators.MinValueValidator(10)])),
                ('total_funds_received', models.DecimalField(decimal_places=2, max_digits=19, null=True)),
                ('campaign_status', models.CharField(max_length=100)),
                ('campaign_image', models.ImageField(blank=True, help_text='Upload a Campaign Image', null=True, upload_to='pic_folder/')),
                ('short_description', models.TextField()),
                ('long_description', models.TextField(blank=True, null=True)),
                ('campaign_type', models.CharField(blank=True, choices=[('REWARD BASED', 'REWARD BASED'), ('DONATION BASED', 'DONATION BASED')], max_length=100, null=True)),
                ('campaign_reward_threshold', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('campaign_reward_details', models.TextField(blank=True, null=True)),
                ('funds_disbursement_status', models.CharField(max_length=100)),
                ('approval_status', models.CharField(blank=True, choices=[('APPROVE', 'APPROVE'), ('REJECT', 'REJECT'), ('PENDING', 'PENDING')], default='PENDING', max_length=100, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True, null=True)),
                ('minimum_donation', models.DecimalField(decimal_places=2, default=1, max_digits=19)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campaign_approver', to=settings.AUTH_USER_MODEL)),
                ('campaign_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_business_owner', to=settings.AUTH_USER_MODEL)),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campaign_rejector', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Campaigns',
            },
        ),
        migrations.CreateModel(
            name='CampaignConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('transaction_fee_type', models.CharField(choices=[('Percentage', 'Percentage'), ('Flat', 'Flat')], max_length=100)),
                ('transaction_fee', models.DecimalField(decimal_places=2, max_digits=19)),
                ('processing_fee_type', models.CharField(choices=[('Percentage', 'Percentage'), ('Flat', 'Flat')], max_length=100)),
                ('processing_fee', models.DecimalField(decimal_places=2, max_digits=19)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Campaign Configurations',
            },
        ),
        migrations.CreateModel(
            name='CampaignDisbursement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_target', models.DecimalField(decimal_places=2, max_digits=19, null=True)),
                ('created_at', models.DateTimeField(null=True, verbose_name='disbursement request date')),
                ('campaign_duration', models.DateField(null=True, verbose_name='campaign closing date')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=19)),
                ('disbursement_type', models.CharField(blank=True, choices=[('DISBURSE', 'DISBURSE'), ('REFUND', 'REFUND')], max_length=100, null=True)),
                ('disbursement_method', models.CharField(blank=True, choices=[('MPESA', 'MPESA'), ('PAYPAL', 'PAYPAL')], max_length=100, null=True)),
                ('disbursement_status', models.CharField(max_length=100)),
                ('recipient_email', models.CharField(blank=True, max_length=255, null=True)),
                ('approval_status', models.CharField(blank=True, choices=[('APPROVE', 'APPROVE'), ('REJECT', 'REJECT'), ('PENDING', 'PENDING')], default='PENDING', max_length=100, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('disbursement_order_number', models.CharField(blank=True, max_length=255, null=True)),
                ('disbursed', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disbursement_approver', to=settings.AUTH_USER_MODEL)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdfunding.Campaign')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disbursement_recipient', to=settings.AUTH_USER_MODEL)),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disbursement_rejector', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Campaign Disbursements',
            },
        ),
        migrations.CreateModel(
            name='CampaignPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(null=True, verbose_name='donation date')),
                ('donator_email', models.CharField(blank=True, max_length=255, null=True)),
                ('donator_phoneno', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=19)),
                ('payment_method', models.CharField(max_length=100)),
                ('payment_status', models.CharField(max_length=100)),
                ('payment_order_number', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_payer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('paid', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True, null=True)),
                ('allow_visibility', models.BooleanField(default=False)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdfunding.Campaign')),
                ('donator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campaign_donator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Campaign Payments',
            },
        ),
        migrations.CreateModel(
            name='CampaignReward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(null=True, verbose_name='reward notification date')),
                ('rewarded_user_email', models.CharField(blank=True, max_length=255, null=True)),
                ('reward', models.TextField()),
                ('reward_status', models.CharField(blank=True, choices=[('PENDING', 'PENDING'), ('DELIVERED', 'DELIVERED')], max_length=100, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdfunding.Campaign')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdfunding.CampaignPayment')),
                ('rewarded_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rewarded_donator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Campaign Rewards',
            },
        ),
        migrations.CreateModel(
            name='CampaignSector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Campaign Sectors',
            },
        ),
        migrations.CreateModel(
            name='MpesaApiToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
                ('created_at', models.DateTimeField(null=True, verbose_name='token generate date')),
                ('status', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Mpesa Api Token',
            },
        ),
        migrations.CreateModel(
            name='MpesaC2BNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(null=True, verbose_name='c2b notification date')),
                ('account_name', models.CharField(max_length=255)),
                ('amount_received', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=255)),
                ('reference_code', models.CharField(max_length=255)),
                ('shortcode', models.CharField(max_length=255)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdfunding.CampaignPayment')),
            ],
            options={
                'verbose_name_plural': 'Mpesa C2B Notification',
            },
        ),
        migrations.CreateModel(
            name='MpesaC2BRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(null=True, verbose_name='c2b register date')),
                ('request_json', models.TextField()),
                ('response_json', models.TextField()),
                ('response_code', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Mpesa C2B Registration',
            },
        ),
        migrations.CreateModel(
            name='MpesaSTKPush',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(null=True, verbose_name='reward notification date')),
                ('request_json', models.TextField()),
                ('response_json', models.TextField()),
                ('response_code', models.IntegerField()),
                ('checkoutID', models.TextField(blank=True, null=True)),
                ('payment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crowdfunding.CampaignPayment')),
            ],
            options={
                'verbose_name_plural': 'Mpesa STK Push',
            },
        ),
        migrations.CreateModel(
            name='MpesaSTKResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(null=True, verbose_name='stk response date')),
                ('response_json', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Mpesa STK Response',
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdfunding.CampaignSector'),
        ),
    ]
