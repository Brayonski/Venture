# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2020-02-21 09:25
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllSystemUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(null=True, verbose_name='system access date')),
                ('username', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('user_type', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'All System Users',
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='Other', max_length=200)),
                ('size', models.CharField(choices=[('Startup', 'Startup: 2+ years post-revenue $10,000 p.a., 3+ full time teams'), ('SME', 'SME: 5+ years from first revenue, $500,000 p.a., 10+ full time team')], max_length=100)),
                ('thumbnail_image', models.ImageField(blank=True, null=True, upload_to='pic_folder/')),
                ('company_primary_email', models.EmailField(max_length=254)),
                ('company_website', models.CharField(blank=True, max_length=200, null=True)),
                ('address', django_countries.fields.CountryField(max_length=2)),
                ('year_of_company_registration', models.IntegerField(choices=[(1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020)])),
                ('value_proposition_statement', models.TextField(blank=True, null=True)),
                ('full_time_employee_count', models.IntegerField()),
                ('verified', models.BooleanField(default=False)),
                ('sample_profile', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Businesses',
            },
        ),
        migrations.CreateModel(
            name='BusinessCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Business Categories',
            },
        ),
        migrations.CreateModel(
            name='BusinessConnectRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(null=True, verbose_name='request date')),
                ('approval_status', models.CharField(blank=True, choices=[('APPROVE', 'APPROVE'), ('REJECT', 'REJECT'), ('PENDING', 'PENDING')], default='PENDING', max_length=100, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='connection_approver', to=settings.AUTH_USER_MODEL)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_to_follow', to='venturelift_profiles.Business')),
                ('investor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_requester', to=settings.AUTH_USER_MODEL)),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conection_rejector', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Business Connect Request',
            },
        ),
        migrations.CreateModel(
            name='BusinessFinancial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_year_revenue', models.IntegerField(blank=True, null=True)),
                ('last_year_profit', models.IntegerField(blank=True, null=True)),
                ('growth_margin', models.IntegerField(blank=True, null=True)),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venturelift_profiles.Business')),
            ],
            options={
                'verbose_name': 'Business Financials',
                'verbose_name_plural': 'Business Financials',
            },
        ),
        migrations.CreateModel(
            name='BusinessGoals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('three_year_targeted_revenue', models.TextField(blank=True, null=True)),
                ('constraints_to_growth', models.TextField(blank=True, null=True)),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_goals', to='venturelift_profiles.Business')),
            ],
            options={
                'verbose_name': 'Business Goal',
                'verbose_name_plural': 'Business Goals',
            },
        ),
        migrations.CreateModel(
            name='BusinessInvestment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funding_source', models.CharField(blank=True, choices=[('bootstrap/own funds', 'bootstrap/own funds'), ('business revenue', 'business revenue'), ('personal loans', 'personal loans')], max_length=200, null=True)),
                ('personal_funds_invested', models.IntegerField(blank=True, null=True)),
                ('external_funds_invested', models.IntegerField(blank=True, null=True)),
                ('capital_to_raise', models.IntegerField(blank=True, null=True)),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venturelift_profiles.Business')),
            ],
            options={
                'verbose_name': 'Business Investment',
                'verbose_name_plural': 'Business Investments',
            },
        ),
        migrations.CreateModel(
            name='BusinessModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_model', models.TextField(blank=True, null=True)),
                ('competitors', models.TextField(blank=True, null=True)),
                ('competitive_advantage', models.TextField(blank=True, null=True)),
                ('intellectual_property_info', models.TextField(blank=True, null=True)),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venturelift_profiles.Business')),
            ],
            options={
                'verbose_name': 'Business Model',
                'verbose_name_plural': 'Business Models',
            },
        ),
        migrations.CreateModel(
            name='BusinessTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('founders_info', models.TextField(blank=True, null=True)),
                ('team_roles_and_structure', models.TextField(blank=True, null=True)),
                ('board_of_advisors', models.TextField(blank=True, null=True)),
                ('board_of_directors', models.TextField(blank=True, null=True)),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venturelift_profiles.Business')),
            ],
            options={
                'verbose_name': 'Business Team',
                'verbose_name_plural': 'Business Teams',
            },
        ),
        migrations.CreateModel(
            name='Investor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funder_type', models.CharField(blank=True, choices=[('Investor', 'Investor'), ('Crowdfunder', 'Crowdfunder'), ('Lender', 'Lender'), ('Grantor', 'Grantor')], max_length=255, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('thumbnail_image', models.ImageField(blank=True, null=True, upload_to='pic_folder/')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='Other', max_length=200)),
                ('phone_number', models.CharField(help_text='My Phone Number', max_length=20, validators=[django.core.validators.MinLengthValidator(5)])),
                ('company', models.CharField(blank=True, max_length=250, null=True)),
                ('role', models.CharField(blank=True, max_length=250, null=True)),
                ('company_location', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('physical_address', models.CharField(blank=True, max_length=250, null=True)),
                ('company_website', models.CharField(blank=True, max_length=250, null=True)),
                ('company_registration_year', models.IntegerField(blank=True, choices=[(1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020)], null=True)),
                ('verified', models.BooleanField(default=False)),
                ('sample_profile', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investor_creator', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='investor_verifier', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InvestorConnectRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(null=True, verbose_name='request date')),
                ('approval_status', models.CharField(blank=True, choices=[('APPROVE', 'APPROVE'), ('REJECT', 'REJECT'), ('PENDING', 'PENDING')], default='PENDING', max_length=100, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='investor_connection_approver', to=settings.AUTH_USER_MODEL)),
                ('investor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investor_to_follow', to='venturelift_profiles.Investor')),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='investor_conection_rejector', to=settings.AUTH_USER_MODEL)),
                ('requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investor_follow_requester', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Investor Connect Request',
            },
        ),
        migrations.CreateModel(
            name='InvestorProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funder_type', models.CharField(choices=[('Investor', 'Investor'), ('Crowdfunder', 'Crowdfunder'), ('Lender', 'Lender'), ('Grantor', 'Grantor')], max_length=255, null=True)),
                ('investment_type', models.CharField(blank=True, max_length=255, null=True)),
                ('investment_product', models.CharField(blank=True, max_length=255, null=True)),
                ('prior_donations', models.TextField(blank=True, help_text='Have you ever contributed as a donation crowdfunder prior? If so, please describe', null=True)),
                ('reason_for_support', models.TextField(blank=True, help_text='Why do you want to support companies in Africa?', null=True)),
                ('managed_funds', models.CharField(blank=True, choices=[('Less than $500,000', 'Less than $500,000'), ('$2million to $5 million', '$2million to $5 million'), ('$5 million to $10 million', '$5 million to $10 million'), ('$10 million to $20 million', '$10 million to $20 million'), ('Over $20 million', 'Over $20 million')], help_text='What is the average amount your firm loans per deal?', max_length=100, null=True)),
                ('loan_book', models.CharField(blank=True, help_text='How large is your loan book?', max_length=255, null=True)),
                ('active_loans', models.IntegerField(blank=True, help_text='How many active loans do you hold?', null=True)),
                ('average_payback', models.CharField(blank=True, choices=[('1 month', '1 month'), ('2-3 months', '2-3 months'), ('6-12 months', '6-12 months')], help_text='What is the average payback period?', max_length=255, null=True)),
                ('interest_rate', models.CharField(blank=True, help_text='What is your interest rate per year?', max_length=255, null=True)),
                ('collateral_list', models.TextField(blank=True, help_text='Do you require collateral to secure the loan? If so, what forms of collateral do you accept?', null=True)),
                ('loan_approval_process', models.TextField(blank=True, help_text='Describe your loan approval process?', null=True)),
                ('npl_percentage', models.TextField(blank=True, help_text='What is the percentage of NPLs of your total loan book?', null=True)),
                ('rfp_list', models.TextField(blank=True, help_text='What is your Request for Proposals?', null=True)),
                ('grants_list', models.TextField(blank=True, help_text='Have you issued any grants prior?', null=True)),
                ('grant_amount', models.IntegerField(blank=True, help_text='What is the amount of the grant you intend to offer?', null=True)),
                ('target_recepients', models.TextField(blank=True, help_text='What is the profile of your targeted recipients?', null=True)),
                ('target_countries', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Top 15 Investment Countries', (('Egypt', 'Egypt'), ('South Africa', 'South Africa'), ('Morocco', 'Morocco'), ('Ethiopia', 'Ethiopia'), ('Kenya', 'Kenya'), ('Rwanda', 'Rwanda'), ('Tanzania', 'Tanzania'), ('Nigeria', 'Nigeria'), ('Ghana', 'Ghana'), ('Ivory Coast', 'Ivory Coast'), ('Algeria', 'Algeria'), ('Botswana', 'Botswana'), ('Zambia', 'Zambia'), ('tunisia', 'Tunisia'), ('Cote D` Ivore', 'Cote D` Ivore'))), ('Others', (('Angola', 'Angola'), ('Benin', 'Benin'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cabo Verde', 'Cabo Verde'), ('Cameroon', 'Cameroon'), ('Central African Republic (CAR)', 'Central African Republic (CAR)'), ('Chad', 'Chad'), ('Comoros', 'Comoros'), ('Djibouti', 'Djibouti'), ('DRC Congo', 'DRC Congo'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Guinea', 'Guinea'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Mali', 'Mali'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mozambique', 'Mozambique'), ('Namibia', 'Namibia'), ('Niger', 'Niger'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Senegal', 'Senegal'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Somalia', 'Somalia'), ('South Sudan', 'South Sudan'), ('Sudan', 'Sudan'), ('Togo', 'Togo'), ('Uganda', 'Uganda'), ('Zimbabwe', 'Zimbabwe')))], help_text='Which are your target countries?', max_length=250, null=True)),
                ('elevator_pitch', models.TextField(blank=True, help_text="What's your investment thesis in brief?", null=True)),
                ('assets_under_management', models.CharField(blank=True, choices=[('<USD 1M', '<USD 1M'), ('USD 1 - 10', 'USD 1M - USD 10M'), ('USD 10 - 50', 'USD 10M - USD 50M'), ('USD 50 - 100', 'USD 5M - USD 100M'), ('USD 100 - 250', 'USD 100M - USD 250M'), ('USD 250 - 500', 'USD 250M - USD 500M'), ('USD 500 - 1b', 'USD 500M - USD 1B'), ('over 1b', 'OVER USD 1B')], help_text="What's the value of your Assets under Management (AUM)?", max_length=250, null=True)),
                ('investor_portfolio', models.CharField(blank=True, choices=[('< 5', '<5'), ('5-10', '5 - 10'), ('10-20', '10 - 20'), ('over 20', 'Over 20')], help_text='How many active portfolio investments do you currently hold?', max_length=250, null=True)),
                ('exits_executed', models.CharField(blank=True, choices=[('none', 'NONE'), ('< 5', '< 5'), ('5-10', '5 - 10'), ('10-20', '10 - 20'), ('Over 20', 'Over 20')], help_text='How many exits have you executed to date?', max_length=250, null=True)),
                ('impact_investor', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO'), ('maybe', 'Maybe')], help_text='Do you classify yourself as an impact investor?', max_length=250, null=True)),
                ('impact_measurement', models.CharField(blank=True, choices=[('giin iris', 'GIIN IRIS'), ('b-corp', 'B-Corp'), ('msci', 'MSCI Sustainable Impact Metrics'), ('proprietary standard', 'Proprietary Standard'), ('other', 'other')], help_text='Which impact measurement standard do you follow?', max_length=250, null=True)),
                ('impact_metrics', models.TextField(blank=True, help_text='Which are your key impact metrics', null=True)),
                ('investor_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investor_profile', to='venturelift_profiles.Investor')),
                ('target_sectors', models.ManyToManyField(blank=True, help_text='Target Sectors', null=True, to='venturelift_profiles.BusinessCategory')),
            ],
            options={
                'verbose_name': 'Investor Profile',
                'verbose_name_plural': 'Investors Profiles',
            },
        ),
        migrations.CreateModel(
            name='MarketDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_offering', models.TextField(blank=True, null=True)),
                ('market_segment', models.TextField(blank=True, null=True)),
                ('needs_fulfilled_by_product', models.TextField(blank=True, null=True)),
                ('market_size', models.TextField(blank=True, null=True)),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venturelift_profiles.Business')),
            ],
            options={
                'verbose_name': 'Business Market Description',
                'verbose_name_plural': 'Business Market Description',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('body', models.TextField()),
                ('blog_type', models.CharField(choices=[('Corporate', 'Corporate'), ('Business Plans', 'Business Plans'), ('Financial Reports', 'Financial Reports')], default='Corporate', max_length=100)),
                ('file_name', models.FileField(blank=True, help_text='Upload an File', null=True, upload_to='pic_folder/')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_company', to='venturelift_profiles.Business')),
                ('investor_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_investor', to='venturelift_profiles.Investor')),
                ('likes', models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Business Updates',
                'verbose_name_plural': 'Business Updates',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Supporter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumbnail_image', models.ImageField(blank=True, null=True, upload_to='pic_folder/')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='Other', max_length=200)),
                ('phone_number', models.CharField(help_text='My Phone Number', max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(5)])),
                ('about', models.TextField(help_text='Briefly describe your self', null=True)),
                ('company', models.CharField(max_length=250, null=True, unique=True)),
                ('role', models.CharField(max_length=250, null=True)),
                ('company_operations', django_countries.fields.CountryField(max_length=2, null=True)),
                ('company_website', models.CharField(blank=True, max_length=250, null=True)),
                ('company_registration_year', models.IntegerField(choices=[(1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020)], default=2010)),
                ('verified', models.BooleanField(default=False)),
                ('sample_profile', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supporter_creator', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supporter_verifier', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SupporterConnectRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(null=True, verbose_name='request date')),
                ('approval_status', models.CharField(blank=True, choices=[('APPROVE', 'APPROVE'), ('REJECT', 'REJECT'), ('PENDING', 'PENDING')], default='PENDING', max_length=100, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supporter_connection_approver', to=settings.AUTH_USER_MODEL)),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supporter_conection_rejector', to=settings.AUTH_USER_MODEL)),
                ('requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supporter_follow_requester', to=settings.AUTH_USER_MODEL)),
                ('supporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supporter_to_follow', to='venturelift_profiles.Supporter')),
            ],
            options={
                'verbose_name_plural': 'Supporter Connect Request',
            },
        ),
        migrations.CreateModel(
            name='SupporterProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supporter_interest', models.CharField(choices=[('Professional Services', 'Professional Services'), ('Talent', 'Talent'), ('Technology', 'Technology'), ('Trade', 'Trade'), ('Supply Chain', 'Supply Chain')], max_length=200)),
                ('interest_startups', models.CharField(blank=True, choices=[('SME', 'SME: 5+ years from first revenue, at least $500,000 in revenue in the last two years of operations, 10 + full time team'), ('Startup', 'Startup: 2+ years post-revenue in the last year of operations, 3+ full time team')], max_length=50, null=True)),
                ('interest_countries', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Top 15 Investment Countries', (('Egypt', 'Egypt'), ('South Africa', 'South Africa'), ('Morocco', 'Morocco'), ('Ethiopia', 'Ethiopia'), ('Kenya', 'Kenya'), ('Rwanda', 'Rwanda'), ('Tanzania', 'Tanzania'), ('Nigeria', 'Nigeria'), ('Ghana', 'Ghana'), ('Ivory Coast', 'Ivory Coast'), ('Algeria', 'Algeria'), ('Botswana', 'Botswana'), ('Zambia', 'Zambia'), ('tunisia', 'Tunisia'), ('Cote D` Ivore', 'Cote D` Ivore'))), ('Others', (('Angola', 'Angola'), ('Benin', 'Benin'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cabo Verde', 'Cabo Verde'), ('Cameroon', 'Cameroon'), ('Central African Republic (CAR)', 'Central African Republic (CAR)'), ('Chad', 'Chad'), ('Comoros', 'Comoros'), ('Djibouti', 'Djibouti'), ('DRC Congo', 'DRC Congo'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Guinea', 'Guinea'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Mali', 'Mali'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mozambique', 'Mozambique'), ('Namibia', 'Namibia'), ('Niger', 'Niger'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Senegal', 'Senegal'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Somalia', 'Somalia'), ('South Sudan', 'South Sudan'), ('Sudan', 'Sudan'), ('Togo', 'Togo'), ('Uganda', 'Uganda'), ('Zimbabwe', 'Zimbabwe')))], help_text='Counties of Interest', max_length=250, null=True)),
                ('trading_partners', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('fair trade', 'Fair Trade'), ('haccp', 'HACCP'), ('ISO 9001', 'ISO 9001')], max_length=50, null=True)),
                ('interest_sectors', models.ManyToManyField(blank=True, help_text='Target Sectors', null=True, to='venturelift_profiles.BusinessCategory')),
                ('supporter_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supporter_profile', to='venturelift_profiles.Supporter')),
            ],
            options={
                'verbose_name': 'Supporter Profile',
                'verbose_name_plural': 'Supporters Profiles',
            },
        ),
        migrations.CreateModel(
            name='SurveyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_time', models.DateTimeField(verbose_name='allow system access from date')),
                ('to_time', models.DateTimeField(verbose_name='allow system access to date')),
                ('active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Survey Users',
            },
        ),
        migrations.CreateModel(
            name='TrackingUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_time', models.DateTimeField(verbose_name='system access date')),
                ('action_name', models.CharField(max_length=255)),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logged_in_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Tracking Logins',
            },
        ),
        migrations.CreateModel(
            name='VlaServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Vla Services',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='supporter_author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_supporter', to='venturelift_profiles.Supporter'),
        ),
        migrations.AddField(
            model_name='businessgoals',
            name='primary_services_interested_in',
            field=models.ManyToManyField(blank=True, related_name='primary_services', to='venturelift_profiles.VlaServices'),
        ),
        migrations.AddField(
            model_name='businessgoals',
            name='secondary_services_interested_in',
            field=models.ManyToManyField(blank=True, related_name='secondary_services', to='venturelift_profiles.VlaServices'),
        ),
        migrations.AddField(
            model_name='business',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venturelift_profiles.BusinessCategory'),
        ),
        migrations.AddField(
            model_name='business',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='business_verifier', to=settings.AUTH_USER_MODEL),
        ),
    ]
